#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
vector<vector<pair<int,int>>>v(100005);
pair<int,pair<int,int>>p[100005];
#define ff first
#define ss second
int root[100005];
int Dsu(int node)
{
    if(root[node]==node)
        return node;
    return root[node]=Dsu(root[node]); //Path compression optimization
}
int main()
{
 int n,m,total=0;
 cin>>n>>m;
 for(int i=0;i<=n;i++)root[i]=i;
 for(int i=0;i<m;i++)
 {
     int from,to,cost;
     cin>>from>>to>>cost;
     p[i].ff=cost;
     p[i].ss.ff=from;
     p[i].ss.ss=to;
 }
 sort(p,p+m);
for(int i=0;i<m;i++)
{
    int a1=Dsu(p[i].ss.ff);
    int b1=Dsu(p[i].ss.ss);
    if(root[a1]!=root[b1])
    {
       a1=Dsu(a1);
       b1=Dsu(b1);
       root[a1]=b1;
       total+=p[i].ff;
    }
}
    return 0;
}
